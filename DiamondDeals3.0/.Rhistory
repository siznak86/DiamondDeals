model_Linear_Batters <- step(lm(AvgSalary ~ . -Player -PlayerID -Years -Dollars -Season, data = finalBatting))
library(readxl)
FreeAgencyBatters <- read_excel("FreeAgencyBatters.xlsx")
View(FreeAgencyBatters)
library(readxl)
FreeAgencyPitchers <- read_excel("FreeAgencyPitchers.xlsx")
View(FreeAgencyPitchers)
# Adding Salary to Batting and Pitching Data
finalBatting <- merge(finalBatting, FreeAgencyBatters, by = c("Player", "PlayerID"))
# Creating a Player ID
# Merging Names
finalPlayers <- merge(finalBatting, finalPitching, by = "Player", all = TRUE)
# Dropping all other rows
finalPlayers <- finalPlayers["Player"]
# Adding ID to all players
finalPlayers <- mutate(finalPlayers, PlayerID = seq_along(Player))
View(finalPlayers)
# Add PlayerId to both Data Sets
finalBatting <- merge(finalBatting, finalPlayers, by = "Player")
finalPitching <- merge(finalPitching, finalPlayers, by = "Player")
FreeAgencyBatters <- merge(FreeAgencyBatters, finalPlayers, by = "Player")
FreeAgencyPitchers <- merge(FreeAgencyPitchers, finalPlayers, by = "Player")
# Dropping Erroneous Columns
drop <- c("Rk", "From", "To", "Age", "Pos", "Team")
finalBatting = finalBatting[,!(names(finalBatting) %in% drop)]
finalPitching = finalPitching[,!(names(finalPitching) %in% drop)]
# Selecting Last Free Agency Season
FreeAgencyBatters <- FreeAgencyBatters %>%
arrange(PlayerID, desc(Season)) %>%
distinct(PlayerID, .keep_all = TRUE)
FreeAgencyPitchers <- FreeAgencyPitchers %>%
arrange(PlayerID, desc(Season)) %>%
distinct(PlayerID, .keep_all = TRUE)
# Adding Salary to Batting and Pitching Data
finalBatting <- merge(finalBatting, FreeAgencyBatters, by = c("Player", "PlayerID"))
finalPitching <- merge(finalPitching, FreeAgencyPitchers, by = c("Player", "PlayerID"))
# Save Batters
# Save Batters
write.csv(finalBatting, "finalBatting.csv", row.names = FALSE)
# Save Pitchers
write.csv(finalPitching, "finalPitching.csv", row.names = FALSE)
# Linear Regression
model_Linear_Batters <- step(lm(AvgSalary ~ . -Player -PlayerID -Years -Dollars -Season, data = finalBatting))
summary(model_Linear_Batters)
# R-Squared = .6755 = 67.55%
model_Linear_Pitchers <- step(lm(AvgSalary ~ . -Player -PlayerID -Years -Dollars -Season, data = finalPitching))
summary(model_Linear_Pitchers)
# R-Squared = .4981 = 49.81%
# Prediction
Batting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G+151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$`1B` + 161898*finalBatting$`2B` + 194471*finalBatting$`3B` + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$`Rbaser + Rdp` - 1235379*finalBatting$Rfield)
# Creating a Actual vs Prediction Dataset
Batting <- data.frame(Player = finalBatting$Player, AvgSalary = finalBatting$AvgSalary)
Pitching <- data.frame(Player = finalPitching$Player, AvgSalary = finalPitching$AvgSalary)
# Prediction
Batting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G+151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$`1B` + 161898*finalBatting$`2B` + 194471*finalBatting$`3B` + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$`Rbaser + Rdp` - 1235379*finalBatting$Rfield)
Batting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G+151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$`1B` + 161898*finalBatting$`2B` + 194471*finalBatting$`3B` + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$`Rbaser + Rdp` - 1235379*finalBatting$Rfield)
# Prediction
finalBatting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G+151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$`1B` + 161898*finalBatting$`2B` + 194471*finalBatting$`3B` + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$`Rbaser + Rdp` - 1235379*finalBatting$Rfield)
Pitching$LinearPredictedSalary <- abs(27844581 - 15738*finalPitching$G - 471595*finalPitching$CG - 38125*finalPitching$H + 93765*finalPitching$ER - 5293847*finalPitching$FIP + 755554*finalPitching$WAA)
# Prediction
Batting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G+151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$`1B` + 161898*finalBatting$`2B` + 194471*finalBatting$`3B` + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$`Rbaser + Rdp` - 1235379*finalBatting$Rfield)
# Prediction
Batting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G+151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$X1B + 161898*finalBatting$X2B + 194471*finalBatting$X3B + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$Rbaser...Rdp - 1235379*finalBatting$Rfield)
# Percent Change = ((Predicted - AVG.SALARY)/AVG. SALARY)
Batting$Linear_Model_Error <- abs((Batting$LinearPredictedSalary - Batting$AvgSalary)/(Batting$AvgSalary))
Pitching$Linear_Model_Error <- abs((Pitching$LinearPredictedSalary - Pitching$AvgSalary)/(Pitching$AvgSalary))
# Mean Error
mean(Batting$Linear_Model_Error)
# 1.363279 = 136.33%
mean(Pitching$Linear_Model_Error)
# Percent Difference = |Predicted – Observed|/[(Predicted + Observed)/2]
Batting$Linear_Model_Difference <- abs(Batting$LinearPredictedSalary - Batting$AvgSalary) / ((Batting$LinearPredictedSalary + Batting$AvgSalary)/2)
Pitching$Linear_Model_Difference <- abs(Pitching$LinearPredictedSalary - Pitching$AvgSalary) / ((Pitching$LinearPredictedSalary + Pitching$AvgSalary)/2)
# Mean Difference
mean(Batting$Linear_Model_Difference)
# .5886695 = 58.87%
mean(Pitching$Linear_Model_Difference)
# Exponential Regression
model_Exponential_Batters <- step(lm(log(AvgSalary) ~ . -Player -PlayerID -Years -Dollars -Season, data = finalBatting))
summary(model_Exponential_Batters)
# R-Squared = .6397 = 63.97%
model_Exponential_Pitchers <- step(lm(log(AvgSalary) ~ . -Player -PlayerID -Years -Dollars -Season, data = finalPitching))
summary(model_Exponential_Pitchers)
# Prediction
Batting$ExpPredictedSalary <- exp(7.028902 + 0.914584*finalBatting$WAR - 0.004677*finalBatting$G + 0.004784*finalBatting$AB - 0.024887*finalBatting$H + 0.013665*finalBatting$X1B + 0.012802*finalBatting$X2B + 0.033728*finalBatting$X3B + 0.007982*finalBatting$RBI + 9.588743*finalBatting$BA + 7.552162*finalBatting$OPS + 0.004256*finalBatting$HBP - 0.021950*finalBatting$SF - 1.103740*finalBatting$WAA - 1.187811*finalBatting$oWAR + 1.438514*finalBatting$dWAR + 0.145552*finalBatting$Rbat - 0.209157*finalBatting$Rdp - 0.199402*finalBatting$Rbaser + 0.339517*finalBatting$Rbaser...Rdp - 0.127289*finalBatting$Rfield)
Pitching$ExpPredictedSalary <- exp(20.375746+0.018493*finalPitching$W - 1.610045*finalPitching$W.L. + 0.005219*finalPitching$GS - 0.146600*finalPitching$CG + 0.197413*finalPitching$SHO + 0.008596*finalPitching$R + 0.009560*finalPitching$WP - 0.001291*finalPitching$BF - 0.557324*finalPitching$FIP - 29.223717*finalPitching$WHIP + 3.027459*finalPitching$H9 + 3.013013*finalPitching$BB9 + 0.042386*finalPitching$WAA)
# Percent Change = ((Predicted - AVG.SALARY)/AVG. SALARY)
Batting$Exp_Model_Error <- abs((Batting$ExpPredictedSalary - Batting$AvgSalary)/(Batting$AvgSalary))
Pitching$Exp_Model_Error <- abs((Pitching$ExpPredictedSalary - Pitching$AvgSalary)/(Pitching$AvgSalary))
# Mean Error
mean(Batting$Exp_Model_Error)
# .6279325 = 62.8%
mean(Pitching$Exp_Model_Error)
# Percent Difference = |Predicted – Observed|/[(Predicted + Observed)/2]
Batting$Exp_Model_Difference <- abs(Batting$ExpPredictedSalary - Batting$AvgSalary) / ((Batting$LinearPredictedSalary + Batting$AvgSalary)/2)
Pitching$Exp_Model_Difference <- abs(Pitching$ExpPredictedSalary - Pitching$AvgSalary) / ((Pitching$LinearPredictedSalary + Pitching$AvgSalary)/2)
# Mean Difference
mean(Batting$Exp_Model_Difference)
# .4242127 = 42.42%
mean(Pitching$Linear_Model_Difference)
# Save Batters
write.csv(Batting, "Batting.csv", row.names = FALSE)
# Save Pitchers
write.csv(Pitching, "Pitching.csv", row.names = FALSE)
game_normal <- function(finalBatting$G) {
game_normal <- function(finalBatting) {
(finalBatting$G - min(finalBatting$G)) / (max(finalBatting$G) - min(finalBatting$G))
}
View(game_normal)
print(game_normal)
game_normal <-(finalBatting$G - min(finalBatting$G)) / (max(finalBatting$G) - min(finalBatting$G))
print(game_normal)
game_normal <-(finalBatting$AvgSalary - min(finalBatting$AvgSalary)) / (max(finalBatting$AvgSalary) - min(finalBatting$AvgSalary))
print(game_normal)
#normalize_z_score <- function(x) {(x - mean(x)) / sd(x)}
game_normal_z <- (finalBatting$AvgSalary - mean(finalBatting$AvgSalary)) / sd(finalBatting$AvgSalary)
print(game_normal_z)
install.packages("ggplot2")
library(ggplot2)
plot(game_normal_minmax)
ggplot(finalBatting, aes(x = PlayerId, y = AvgSalary)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "ID V. Free Agent Salary", x = "ID", y = "Salary")
ggplot(finalBatting, aes(x = PlayerID, y = AvgSalary)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "ID V. Free Agent Salary", x = "ID", y = "Salary")
#Normalize Data
#normalize_min_max <- function(x) {(x - min(x)) / (max(x) - min(x))}
FinalBatting$game_normal_minmax_salary <-(finalBatting$AvgSalary - min(finalBatting$AvgSalary)) / (max(finalBatting$AvgSalary) - min(finalBatting$AvgSalary))
#Normalize Data
#normalize_min_max <- function(x) {(x - min(x)) / (max(x) - min(x))}
finalBatting$game_normal_minmax_salary <-(finalBatting$AvgSalary - min(finalBatting$AvgSalary)) / (max(finalBatting$AvgSalary) - min(finalBatting$AvgSalary))
#normalize_z_score <- function(x) {(x - mean(x)) / sd(x)}
finalBatting$game_normal_z_salary <- (finalBatting$AvgSalary - mean(finalBatting$AvgSalary)) / sd(finalBatting$AvgSalary)
ggplot(finalBatting, aes(x = PlayerID, y = game_normal_minmax_salary)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "ID V. Free Agent Salary", x = "ID", y = "Salary")
ggplot(finalBatting, aes(x = game_normal_minmax_salary, y = WAR)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "ID V. Free Agent Salary", x = "ID", y = "Salary")
ggplot(finalBatting, aes(x = game_normal_minmax_salary)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "ID V. Free Agent Salary", x = "ID", y = "Salary")
ggplot(finalBatting, aes(x = game_normal_minmax_salary, y=)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "ID V. Free Agent Salary", x = "ID", y = "Salary")
ggplot(finalBatting, aes(x = game_normal_minmax_salary, y=rank)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "ID V. Free Agent Salary", x = "ID", y = "Salary")
ggplot(finalBatting, aes(x = game_normal_minmax_salary, y=rank)) +
geom_point(color = "blue", size = 3) +
ggplot(finalBatting, aes(x = game_normal_minmax_salary, y = WAR)) +
geom_point(color = "blue", size = 3) +
ggplot(finalBatting, aes(x = game_normal_minmax_salary, y = WAR)) +
geom_point(color = "blue", size = 3)
ggplot(finalBatting, aes(x = game_normal_minmax_salary, y = WAR)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "ID V. Free Agent Salary", x = "ID", y = "Salary")
ggplot(finalBatting, aes(x = game_normal_minmax_salary, y = WAR))
ggplot(finalBatting, aes(x = game_normal_minmax_salary, y = WAR)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "red")
ggplot(finalBatting, aes(x = game_normal_minmax_salary, y = game_normal_minmax_salary)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "red")
ggplot(finalBatting, aes(x = game_normal_minmax_salary, y = game_normal_z_salary)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", se = FALSE, color = "red")
# Linear Regression
model_Linear_Batters <- step(lm(AvgSalary ~ . -Player -PlayerID -Years -Dollars -Season, data = finalBatting))
summary(model_Linear_Batters)
# R-Squared = .6755 = 67.55%
model_Linear_Batters1 <- step(lm(game_normal_z_salary ~ . -Player -PlayerID -Years -Dollars -Season -AvgSalary, data = finalBatting))
# R-Squared = .6755 = 67.55%
model_Linear_Batters1 <- step(lm(game_normal_z_salary ~ . -Player -PlayerID -Years -Dollars -Season -AvgSalary -game_normal_minmax_salary, data = finalBatting))
summary(model_Linear_Batters1)
# R-Squared = .6755 = 67.55%
model_Linear_Batters1 <- step(lm(game_normal_minmax_salary ~ . -Player -PlayerID -Years -Dollars -Season -AvgSalary -game_normal_z_salary, data = finalBatting))
summary(model_Linear_Batters1)
# Save Batters
write.csv(finalBatting, "finalBatting.csv", row.names = FALSE)
# Normalized
Batting$LinearPredictedSalaryNorm <- abs(-.973854 + .0752582*finalBatting$WAR)
mean(finalBatting$AvgSalary)
# Normalized
Batting$LinearPredictedSalaryNorm <- 8891076*abs(-.973854 + .0752582*finalBatting$WAR)
plot(x, Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Lines Plot")# Add the second line
lines(x, Batting$LinearPredictedSalaryNorm, col = "red", lwd = 2)
library(ggplot2)
plot(x, Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Lines Plot")# Add the second line
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Lines Plot")# Add the second line
lines(Batting$LinearPredictedSalaryNorm, col = "red", lwd = 2)
# Normalized
Batting$LinearPredictedSalaryNorm <- 8891076*abs(-.973854 + .0752582*finalBatting$WAR - .0004818*finalBatting$G)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two LinesGplot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Lines Plot")# Add the second line
# Normalized
Batting$LinearPredictedSalaryNorm <- 8891076*abs(-.973854 + .0752582*finalBatting$WAR - .0004818*finalBatting$G)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Lines Plot")# Add the second line
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Lines Plot")# Add the second line
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Lines Plot")# Add the second line
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalaryNorm, col = "red", lwd = 2)
# Normalized
Batting$LinearPredictedSalaryNorm <- 8891076-.973854 + .0752582*finalBatting$WAR - .0004818*finalBatting$G
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalaryNorm, col = "red", lwd = 2)
# Normalized
Batting$LinearPredictedSalaryNorm <- 8891076*(-.973854 + .0752582*finalBatting$WAR - .0004818*finalBatting$G)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalaryNorm, col = "red", lwd = 2)
# Normalized
Batting$LinearPredictedSalaryNorm <- 8891076*abs(-.973854 + .0752582*finalBatting$WAR - .0004818*finalBatting$G)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalaryNorm, col = "red", lwd = 2)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
# Prediction
Batting$LinearPredictedSalary <- 8891076+abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G+151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$X1B + 161898*finalBatting$X2B + 194471*finalBatting$X3B + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$Rbaser...Rdp - 1235379*finalBatting$Rfield)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
# Prediction
Batting$LinearPredictedSalary <- 8891076*abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G+151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$X1B + 161898*finalBatting$X2B + 194471*finalBatting$X3B + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$Rbaser...Rdp - 1235379*finalBatting$Rfield)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
# Prediction
Batting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G+151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$X1B + 161898*finalBatting$X2B + 194471*finalBatting$X3B + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$Rbaser...Rdp - 1235379*finalBatting$Rfield)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
plot(Pitching$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Pitching$LinearPredictedSalary, col = "red", lwd = 2)
# Normalized
Batting$LinearPredictedSalaryNorm <- 8891076*abs(-.973854 + .0752582*finalBatting$WAR - .0004818*finalBatting$G + 0.0021896*finalBatting$PA - 0.0013339*finalBatting$AB - 0.0043057*finalBatting$H + 0.0024672*finalBatting$X1B + 0.0023364*finalBatting$X2B + 0.0028065*finalBatting$X3B + 0.0013621*finalBatting$RBI - 0.0025465*finalBatting$BB + 2.2791225*finalBatting$OBP + 0.9515718*finalBatting$SLG - 0.0023952*finalBatting$HBP - 0.0064356*finalBatting$SF + 0.0030290*finalBatting$IBB - 0.1592060*finalBatting$oWAR + 0.0969426*finalBatting$dWAR + 0.0100934*finalBatting$Rbat + 0.0100456*finalBatting$Rbaser...Rdp - 0.0178283*finalBatting$Rfield)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalaryNorm, col = "red", lwd = 2)
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
# Normalized
Batting$LinearPredictedSalaryNorm <- 8891076-.973854 + .0752582*finalBatting$WAR - .0004818*finalBatting$G + 0.0021896*finalBatting$PA - 0.0013339*finalBatting$AB - 0.0043057*finalBatting$H + 0.0024672*finalBatting$X1B + 0.0023364*finalBatting$X2B + 0.0028065*finalBatting$X3B + 0.0013621*finalBatting$RBI - 0.0025465*finalBatting$BB + 2.2791225*finalBatting$OBP + 0.9515718*finalBatting$SLG - 0.0023952*finalBatting$HBP - 0.0064356*finalBatting$SF + 0.0030290*finalBatting$IBB - 0.1592060*finalBatting$oWAR + 0.0969426*finalBatting$dWAR + 0.0100934*finalBatting$Rbat + 0.0100456*finalBatting$Rbaser...Rdp - 0.0178283*finalBatting$Rfield)
# Normalized
Batting$LinearPredictedSalaryNorm <- 8891076 - .973854 + .0752582*finalBatting$WAR - .0004818*finalBatting$G + 0.0021896*finalBatting$PA - 0.0013339*finalBatting$AB - 0.0043057*finalBatting$H + 0.0024672*finalBatting$X1B + 0.0023364*finalBatting$X2B + 0.0028065*finalBatting$X3B + 0.0013621*finalBatting$RBI - 0.0025465*finalBatting$BB + 2.2791225*finalBatting$OBP + 0.9515718*finalBatting$SLG - 0.0023952*finalBatting$HBP - 0.0064356*finalBatting$SF + 0.0030290*finalBatting$IBB - 0.1592060*finalBatting$oWAR + 0.0969426*finalBatting$dWAR + 0.0100934*finalBatting$Rbat + 0.0100456*finalBatting$Rbaser...Rdp - 0.0178283*finalBatting$Rfield
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalaryNorm, col = "red", lwd = 2)
# Normalized
Batting$LinearPredictedSalaryNorm <- 8891076*(-.973854 + .0752582*finalBatting$WAR - .0004818*finalBatting$G + 0.0021896*finalBatting$PA - 0.0013339*finalBatting$AB - 0.0043057*finalBatting$H + 0.0024672*finalBatting$X1B + 0.0023364*finalBatting$X2B + 0.0028065*finalBatting$X3B + 0.0013621*finalBatting$RBI - 0.0025465*finalBatting$BB + 2.2791225*finalBatting$OBP + 0.9515718*finalBatting$SLG - 0.0023952*finalBatting$HBP - 0.0064356*finalBatting$SF + 0.0030290*finalBatting$IBB - 0.1592060*finalBatting$oWAR + 0.0969426*finalBatting$dWAR + 0.0100934*finalBatting$Rbat + 0.0100456*finalBatting$Rbaser...Rdp - 0.0178283*finalBatting$Rfield)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalaryNorm, col = "red", lwd = 2)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
plot(Pitching$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Pitching$LinearPredictedSalary, col = "red", lwd = 2)
# Percent Change = ((Predicted - AVG.SALARY)/AVG. SALARY)
Batting$Linear_Model_Error <- abs((Batting$LinearPredictedSalary - Batting$AvgSalary)/(Batting$AvgSalary))
Pitching$Linear_Model_Error <- abs((Pitching$LinearPredictedSalary - Pitching$AvgSalary)/(Pitching$AvgSalary))
# Mean Error
mean(Batting$Linear_Model_Error)
# 1.363279 = 136.33%
mean(Pitching$Linear_Model_Error)
# Percent Difference = |Predicted – Observed|/[(Predicted + Observed)/2]
Batting$Linear_Model_Difference <- abs(Batting$LinearPredictedSalary - Batting$AvgSalary) / ((Batting$LinearPredictedSalary + Batting$AvgSalary)/2)
Pitching$Linear_Model_Difference <- abs(Pitching$LinearPredictedSalary - Pitching$AvgSalary) / ((Pitching$LinearPredictedSalary + Pitching$AvgSalary)/2)
# Mean Difference
mean(Batting$Linear_Model_Difference)
# .5886695 = 58.87%
mean(Pitching$Linear_Model_Difference)
# Exponential Regression
model_Exponential_Batters <- step(lm(log(AvgSalary) ~ . -Player -PlayerID -Years -Dollars -Season, data = finalBatting))
summary(model_Exponential_Batters)
# R-Squared = .6397 = 63.97%
model_Exponential_Pitchers <- step(lm(log(AvgSalary) ~ . -Player -PlayerID -Years -Dollars -Season, data = finalPitching))
summary(model_Exponential_Pitchers)
# Exponential Regression
model_Exponential_Batters <- step(lm(log(AvgSalary) ~ . -Player -PlayerID -Years -Dollars -Season -game_normal_minmax_salary, data = finalBatting))
summary(model_Exponential_Batters)
# Exponential Regression
model_Exponential_Batters <- step(lm(log(AvgSalary) ~ . -Player -PlayerID -Years -Dollars -Season -game_normal_minmax_salary -game_normal_z_salary, data = finalBatting))
summary(model_Exponential_Batters)
# R-Squared = .6397 = 63.97%
model_Exponential_Pitchers <- step(lm(log(AvgSalary) ~ . -Player -PlayerID -Years -Dollars -Season, data = finalPitching))
summary(model_Exponential_Pitchers)
# Prediction
Batting$ExpPredictedSalary <- exp(7.028902 + 0.914584*finalBatting$WAR - 0.004677*finalBatting$G + 0.004784*finalBatting$AB - 0.024887*finalBatting$H + 0.013665*finalBatting$X1B + 0.012802*finalBatting$X2B + 0.033728*finalBatting$X3B + 0.007982*finalBatting$RBI + 9.588743*finalBatting$BA + 7.552162*finalBatting$OPS + 0.004256*finalBatting$HBP - 0.021950*finalBatting$SF - 1.103740*finalBatting$WAA - 1.187811*finalBatting$oWAR + 1.438514*finalBatting$dWAR + 0.145552*finalBatting$Rbat - 0.209157*finalBatting$Rdp - 0.199402*finalBatting$Rbaser + 0.339517*finalBatting$Rbaser...Rdp - 0.127289*finalBatting$Rfield)
Pitching$ExpPredictedSalary <- exp(20.375746+0.018493*finalPitching$W - 1.610045*finalPitching$W.L. + 0.005219*finalPitching$GS - 0.146600*finalPitching$CG + 0.197413*finalPitching$SHO + 0.008596*finalPitching$R + 0.009560*finalPitching$WP - 0.001291*finalPitching$BF - 0.557324*finalPitching$FIP - 29.223717*finalPitching$WHIP + 3.027459*finalPitching$H9 + 3.013013*finalPitching$BB9 + 0.042386*finalPitching$WAA)
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Batting$ExpPredictedSalary, col = "red", lwd = 2)
plot(Pitching$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "X-axis", ylab = "Y-axis", main = "Two Linesplot")
lines(Pitching$ExpPredictedSalary, col = "red", lwd = 2)
# Prediction graphed
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Average Salary", main = "Predicted and Actual")
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
plot(Pitching$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Average Salary", main = "Predicted and Actual Pitching")
lines(Pitching$LinearPredictedSalary, col = "red", lwd = 2)
# Prediction Graphed
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted and Actual Batting")
lines(Batting$ExpPredictedSalary, col = "red", lwd = 2)
plot(Pitching$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted and Actual Pitching")
lines(Pitching$ExpPredictedSalary, col = "red", lwd = 2)
library(rvest)
library(dplyr)
library(tidyr)
library(formattable)
library(stringr)
library(stringi)
library(ggplot2)
# Collecting Batting Life Time of Active Players
urls_batting <- c(
"https://stathead.com/tiny/9LjPk",
"https://stathead.com/tiny/BgUPm",
"https://stathead.com/tiny/d0ZzF",
"https://stathead.com/tiny/YOkVb",
"https://stathead.com/tiny/lQHSh"
)
# Creating a list of Batting Data
list_Batting <- list()
# Iterate over each URL
for (url in urls_batting) {
page <- read_html(url)
Batting <- html_table(html_nodes(page, "table"))[[1]]
# Append the data frame to the list
list_Batting <- c(list_Batting, list(Batting))
}
# Linear Regression
model_Linear_Batters <- step(lm(AvgSalary ~ . -Player -PlayerID -Years -Dollars -Season -game_normal_minmax_salary -game_normal_z_salary, data = finalBatting))
summary(model_Linear_Batters)
# Prediction graphed
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Linear and Actual Batting")
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
# Prediction graphed
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Linear and Actual Batting")
library(ggplot2)
# Linear Regression
model_Linear_Batters <- step(lm(AvgSalary ~ . -Player -PlayerID -Years -Dollars -Season -game_normal_minmax_salary -game_normal_z_salary, data = finalBatting))
summary(model_Linear_Batters)
# R-Squared = .6755 = 67.55%
model_Linear_Pitchers <- step(lm(AvgSalary ~ . -Player -PlayerID -Years -Dollars -Season, data = finalPitching))
summary(model_Linear_Pitchers)
# R-Squared = .4981 = 49.81%
# Prediction
Batting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G + 151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$X1B + 161898*finalBatting$X2B + 194471*finalBatting$X3B + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$Rbaser...Rdp - 1235379*finalBatting$Rfield)
# Prediction graphed
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Linear and Actual Batting")
# Prediction
Batting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G + 151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$X1B + 161898*finalBatting$X2B + 194471*finalBatting$X3B + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$Rbaser...Rdp - 1235379*finalBatting$Rfield)
summary(model_Linear_Batters)
summary(model_Linear_Pitchers)
# Prediction
Batting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G + 151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$X1B + 161898*finalBatting$X2B + 194471*finalBatting$X3B + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$Rbaser...Rdp - 1235379*finalBatting$Rfield)
# Creating a Actual vs Prediction Dataset
Batting <- data.frame(Player = finalBatting$Player, AvgSalary = finalBatting$AvgSalary)
# Prediction
Batting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G + 151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$X1B + 161898*finalBatting$X2B + 194471*finalBatting$X3B + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$Rbaser...Rdp - 1235379*finalBatting$Rfield)
Pitching$LinearPredictedSalary <- abs(27844581 - 15738*finalPitching$G - 471595*finalPitching$CG - 38125*finalPitching$H + 93765*finalPitching$ER - 5293847*finalPitching$FIP + 755554*finalPitching$WAA)
# Prediction graphed
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Linear and Actual Batting")
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
plot(Pitching$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Linear and Actual Pitching")
lines(Pitching$LinearPredictedSalary, col = "red", lwd = 2)
# Percent Change = ((Predicted - AVG.SALARY)/AVG. SALARY)
Batting$Linear_Model_Error <- abs((Batting$LinearPredictedSalary - Batting$AvgSalary)/(Batting$AvgSalary))
Pitching$Linear_Model_Error <- abs((Pitching$LinearPredictedSalary - Pitching$AvgSalary)/(Pitching$AvgSalary))
# Mean Error
mean(Batting$Linear_Model_Error)
# 1.363279 = 136.33%
mean(Pitching$Linear_Model_Error)
# Percent Difference = |Predicted – Observed|/[(Predicted + Observed)/2]
Batting$Linear_Model_Difference <- abs(Batting$LinearPredictedSalary - Batting$AvgSalary) / ((Batting$LinearPredictedSalary + Batting$AvgSalary)/2)
Pitching$Linear_Model_Difference <- abs(Pitching$LinearPredictedSalary - Pitching$AvgSalary) / ((Pitching$LinearPredictedSalary + Pitching$AvgSalary)/2)
# Mean Difference
mean(Batting$Linear_Model_Difference)
# .5886695 = 58.87%
mean(Pitching$Linear_Model_Difference)
# Exponential Regression
model_Exponential_Batters <- step(lm(log(AvgSalary) ~ . -Player -PlayerID -Years -Dollars -Season -game_normal_minmax_salary -game_normal_z_salary, data = finalBatting))
summary(model_Exponential_Batters)
# R-Squared = .6397 = 63.97%
model_Exponential_Pitchers <- step(lm(log(AvgSalary) ~ . -Player -PlayerID -Years -Dollars -Season, data = finalPitching))
summary(model_Exponential_Pitchers)
# Prediction
Batting$ExpPredictedSalary <- exp(7.028902 + 0.914584*finalBatting$WAR - 0.004677*finalBatting$G + 0.004784*finalBatting$AB - 0.024887*finalBatting$H + 0.013665*finalBatting$X1B + 0.012802*finalBatting$X2B + 0.033728*finalBatting$X3B + 0.007982*finalBatting$RBI + 9.588743*finalBatting$BA + 7.552162*finalBatting$OPS + 0.004256*finalBatting$HBP - 0.021950*finalBatting$SF - 1.103740*finalBatting$WAA - 1.187811*finalBatting$oWAR + 1.438514*finalBatting$dWAR + 0.145552*finalBatting$Rbat - 0.209157*finalBatting$Rdp - 0.199402*finalBatting$Rbaser + 0.339517*finalBatting$Rbaser...Rdp - 0.127289*finalBatting$Rfield)
Pitching$ExpPredictedSalary <- exp(20.375746+0.018493*finalPitching$W - 1.610045*finalPitching$W.L. + 0.005219*finalPitching$GS - 0.146600*finalPitching$CG + 0.197413*finalPitching$SHO + 0.008596*finalPitching$R + 0.009560*finalPitching$WP - 0.001291*finalPitching$BF - 0.557324*finalPitching$FIP - 29.223717*finalPitching$WHIP + 3.027459*finalPitching$H9 + 3.013013*finalPitching$BB9 + 0.042386*finalPitching$WAA)
# Prediction Graphed
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Exponential and Actual Batting")
lines(Batting$ExpPredictedSalary, col = "red", lwd = 2)
plot(Pitching$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Exponential and Actual Pitching")
lines(Pitching$ExpPredictedSalary, col = "red", lwd = 2)
# Percent Change = ((Predicted - AVG.SALARY)/AVG. SALARY)
Batting$Exp_Model_Error <- abs((Batting$ExpPredictedSalary - Batting$AvgSalary)/(Batting$AvgSalary))
Pitching$Exp_Model_Error <- abs((Pitching$ExpPredictedSalary - Pitching$AvgSalary)/(Pitching$AvgSalary))
# Mean Error
mean(Batting$Exp_Model_Error)
# .6279325 = 62.8%
mean(Pitching$Exp_Model_Error)
# Percent Difference = |Predicted – Observed|/[(Predicted + Observed)/2]
Batting$Exp_Model_Difference <- abs(Batting$ExpPredictedSalary - Batting$AvgSalary) / ((Batting$LinearPredictedSalary + Batting$AvgSalary)/2)
Pitching$Exp_Model_Difference <- abs(Pitching$ExpPredictedSalary - Pitching$AvgSalary) / ((Pitching$LinearPredictedSalary + Pitching$AvgSalary)/2)
# Mean Difference
mean(Batting$Exp_Model_Difference)
# .4242127 = 42.42%
mean(Pitching$Linear_Model_Difference)
# Save Batters
write.csv(Batting, "Batting.csv", row.names = FALSE)
# Save Pitchers
write.csv(Pitching, "Pitching.csv", row.names = FALSE)
# Dropping Ohtani
Batting <- subset(Batting, Player != Shohei Ohtani)
# Dropping Ohtani
Batting <- subset(Batting, Player != "Shohei Ohtani")
Pitching <- subset(Pitching, Player != "Shohei Ohtani")
# Linear Regression
model_Linear_Batters <- step(lm(AvgSalary ~ . -Player -PlayerID -Years -Dollars -Season -game_normal_minmax_salary -game_normal_z_salary, data = finalBatting))
summary(model_Linear_Batters)
model_Linear_Pitchers <- step(lm(AvgSalary ~ . -Player -PlayerID -Years -Dollars -Season, data = finalPitching))
summary(model_Linear_Pitchers)
# Dropping Ohtani
finalBatting <- subset(finalBatting, Player != "Shohei Ohtani")
finalPitching <- subset(finalPitching, Player != "Shohei Ohtani")
# Linear Regression
model_Linear_Batters <- step(lm(AvgSalary ~ . -Player -PlayerID -Years -Dollars -Season -game_normal_minmax_salary -game_normal_z_salary, data = finalBatting))
summary(model_Linear_Batters)
model_Linear_Pitchers <- step(lm(AvgSalary ~ . -Player -PlayerID -Years -Dollars -Season, data = finalPitching))
summary(model_Linear_Pitchers)
# Prediction
Batting$LinearPredictedSalary <- abs(-66774432 + 5214866*finalBatting$WAR - 33385*finalBatting$G + 151727*finalBatting$PA - 92428*finalBatting$AB - 298356*finalBatting$H + 170959*finalBatting$X1B + 161898*finalBatting$X2B + 194471*finalBatting$X3B + 94387*finalBatting$RBI - 176455*finalBatting$BB + 157927237*finalBatting$OBP + 65937267*finalBatting$SLG - 165972*finalBatting$HBP - 445942*finalBatting$SF + 209887*finalBatting$IBB - 11031861*finalBatting$oWAR + 6717442*finalBatting$dWAR + 699401*finalBatting$Rbat + 696090*finalBatting$Rbaser...Rdp - 1235379*finalBatting$Rfield)
Pitching$LinearPredictedSalary <- abs(27844581 - 15738*finalPitching$G - 471595*finalPitching$CG - 38125*finalPitching$H + 93765*finalPitching$ER - 5293847*finalPitching$FIP + 755554*finalPitching$WAA)
# Prediction graphed
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Linear and Actual Batting")
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
plot(Pitching$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Linear and Actual Pitching")
lines(Pitching$LinearPredictedSalary, col = "red", lwd = 2)
# Percent Change = ((Predicted - AVG.SALARY)/AVG. SALARY)
Batting$Linear_Model_Error <- abs((Batting$LinearPredictedSalary - Batting$AvgSalary)/(Batting$AvgSalary))
Pitching$Linear_Model_Error <- abs((Pitching$LinearPredictedSalary - Pitching$AvgSalary)/(Pitching$AvgSalary))
# Mean Error
mean(Batting$Linear_Model_Error)
# 1.363279 = 136.33%
mean(Pitching$Linear_Model_Error)
# Percent Difference = |Predicted – Observed|/[(Predicted + Observed)/2]
Batting$Linear_Model_Difference <- abs(Batting$LinearPredictedSalary - Batting$AvgSalary) / ((Batting$LinearPredictedSalary + Batting$AvgSalary)/2)
Pitching$Linear_Model_Difference <- abs(Pitching$LinearPredictedSalary - Pitching$AvgSalary) / ((Pitching$LinearPredictedSalary + Pitching$AvgSalary)/2)
# Mean Difference
mean(Batting$Linear_Model_Difference)
# .5886695 = 58.87%
mean(Pitching$Linear_Model_Difference)
# Exponential Regression
model_Exponential_Batters <- step(lm(log(AvgSalary) ~ . -Player -PlayerID -Years -Dollars -Season -game_normal_minmax_salary -game_normal_z_salary, data = finalBatting))
summary(model_Exponential_Batters)
# R-Squared = .6397 = 63.97%
model_Exponential_Pitchers <- step(lm(log(AvgSalary) ~ . -Player -PlayerID -Years -Dollars -Season, data = finalPitching))
summary(model_Exponential_Pitchers)
# Prediction
Batting$ExpPredictedSalary <- exp(7.028902 + 0.914584*finalBatting$WAR - 0.004677*finalBatting$G + 0.004784*finalBatting$AB - 0.024887*finalBatting$H + 0.013665*finalBatting$X1B + 0.012802*finalBatting$X2B + 0.033728*finalBatting$X3B + 0.007982*finalBatting$RBI + 9.588743*finalBatting$BA + 7.552162*finalBatting$OPS + 0.004256*finalBatting$HBP - 0.021950*finalBatting$SF - 1.103740*finalBatting$WAA - 1.187811*finalBatting$oWAR + 1.438514*finalBatting$dWAR + 0.145552*finalBatting$Rbat - 0.209157*finalBatting$Rdp - 0.199402*finalBatting$Rbaser + 0.339517*finalBatting$Rbaser...Rdp - 0.127289*finalBatting$Rfield)
Pitching$ExpPredictedSalary <- exp(20.375746+0.018493*finalPitching$W - 1.610045*finalPitching$W.L. + 0.005219*finalPitching$GS - 0.146600*finalPitching$CG + 0.197413*finalPitching$SHO + 0.008596*finalPitching$R + 0.009560*finalPitching$WP - 0.001291*finalPitching$BF - 0.557324*finalPitching$FIP - 29.223717*finalPitching$WHIP + 3.027459*finalPitching$H9 + 3.013013*finalPitching$BB9 + 0.042386*finalPitching$WAA)
# Prediction Graphed
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Exponential and Actual Batting")
lines(Batting$ExpPredictedSalary, col = "red", lwd = 2)
plot(Pitching$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Exponential and Actual Pitching")
lines(Pitching$ExpPredictedSalary, col = "red", lwd = 2)
# Percent Change = ((Predicted - AVG.SALARY)/AVG. SALARY)
Batting$Exp_Model_Error <- abs((Batting$ExpPredictedSalary - Batting$AvgSalary)/(Batting$AvgSalary))
Pitching$Exp_Model_Error <- abs((Pitching$ExpPredictedSalary - Pitching$AvgSalary)/(Pitching$AvgSalary))
# Mean Error
mean(Batting$Exp_Model_Error)
# .6279325 = 62.8%
mean(Pitching$Exp_Model_Error)
# Percent Difference = |Predicted – Observed|/[(Predicted + Observed)/2]
Batting$Exp_Model_Difference <- abs(Batting$ExpPredictedSalary - Batting$AvgSalary) / ((Batting$LinearPredictedSalary + Batting$AvgSalary)/2)
Pitching$Exp_Model_Difference <- abs(Pitching$ExpPredictedSalary - Pitching$AvgSalary) / ((Pitching$LinearPredictedSalary + Pitching$AvgSalary)/2)
# Mean Difference
mean(Batting$Exp_Model_Difference)
# .4242127 = 42.42%
mean(Pitching$Linear_Model_Difference)
# Save Batters
write.csv(Batting, "Batting.csv", row.names = FALSE)
# Save Pitchers
write.csv(Pitching, "Pitching.csv", row.names = FALSE)
summary(model_Linear_Batters)
# Prediction
Batting$LinearPredictedSalary <- abs(-18991083 + 8308623*finalBatting$WAR - 35181*finalBatting$G + 41986*finalBatting$R - 92191*finalBatting$H + 67825*finalBatting$X1B + 75033*finalBatting$X2B + 113032*finalBatting$X3B + 54714*finalBatting$RBI + 61793742*finalBatting$BA + 125680*finalBatting$OPS. - 236298*finalBatting$SF - 14039632*finalBatting$WAA - 6598334*finalBatting$oWAR + 13153636*finalBatting$dWAR + 1279545*finalBatting$Rbat - 239726*finalBatting$Rbaser + 1387029*finalBatting$Rbaser...Rdp - 749272*finalBatting$Rfield)
# Prediction graphed
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Linear and Actual Batting")
lines(Batting$LinearPredictedSalary, col = "red", lwd = 2)
# Percent Change = ((Predicted - AVG.SALARY)/AVG. SALARY)
Batting$Linear_Model_Error <- abs((Batting$LinearPredictedSalary - Batting$AvgSalary)/(Batting$AvgSalary))
# Mean Error
mean(Batting$Linear_Model_Error)
# Percent Difference = |Predicted – Observed|/[(Predicted + Observed)/2]
Batting$Linear_Model_Difference <- abs(Batting$LinearPredictedSalary - Batting$AvgSalary) / ((Batting$LinearPredictedSalary + Batting$AvgSalary)/2)
# Mean Difference
mean(Batting$Linear_Model_Difference)
summary(model_Exponential_Batters)
# Prediction
Batting$ExpPredictedSalary <- exp(11.489955 + 0.897636*finalBatting$WAR - 0.005398*finalBatting$G - 0.015428*finalBatting$PA + 0.016954*finalBatting$AB + 0.029435*finalBatting$X3B + 0.003880*finalBatting$RBI - 0.012874*finalBatting$CS + 0.018337*finalBatting$BB + 0.035335*finalBatting$OPS. + 0.024001*finalBatting$HBP + 0.023591*finalBatting$SH - 1.228335*finalBatting$WAA - 1.092653*finalBatting$oWAR + 1.477830*finalBatting$dWAR + 0.139464*finalBatting$Rbat + 0.141667*finalBatting$Rbaser...Rdp - 0.116644*finalBatting$Rfield)
# Prediction Graphed
plot(Batting$AvgSalary, type = "l", col = "blue", lwd = 2, xlab = "", ylab = "Salary", main = "Predicted Exponential and Actual Batting")
lines(Batting$ExpPredictedSalary, col = "red", lwd = 2)
# Percent Change = ((Predicted - AVG.SALARY)/AVG. SALARY)
Batting$Exp_Model_Error <- abs((Batting$ExpPredictedSalary - Batting$AvgSalary)/(Batting$AvgSalary))
# Mean Error
mean(Batting$Exp_Model_Error)
# Percent Difference = |Predicted – Observed|/[(Predicted + Observed)/2]
Batting$Exp_Model_Difference <- abs(Batting$ExpPredictedSalary - Batting$AvgSalary) / ((Batting$LinearPredictedSalary + Batting$AvgSalary)/2)
# Mean Difference
mean(Batting$Exp_Model_Difference)
# Save Batters
write.csv(Batting, "Batting.csv", row.names = FALSE)
